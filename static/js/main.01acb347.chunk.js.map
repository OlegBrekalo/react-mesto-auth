{"version":3,"sources":["contexts/currentUser.js","images/mesto-logo.svg","components/Header.jsx","components/ProtectedRoute.jsx","utils/constants.js","components/Card.jsx","components/Main.jsx","components/EntryPoint.jsx","components/Register.jsx","components/Login.jsx","components/Footer.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","components/InfoTooltip.jsx","components/PopupWithImage.jsx","utils/getResponseData.js","utils/api.js","utils/authApi.js","components/App.jsx","index.jsx"],"names":["React","createContext","Header","loggedIn","onSignOut","currentUser","useContext","CurrentUserContext","className","to","src","logo","alt","email","type","aria-label","onClick","defaultProps","ProtectedRoute","Component","component","props","exact","onErrorMockImage","Card","id","name","link","likes","owner","onLike","onDelete","isLiked","length","find","like","_id","removeIconStyle","likeIconStyle","role","call","onError","evt","target","title","Main","handlersProfile","cards","handlersCard","avatar","setOpenEditAvatar","setOpenEditProfile","about","setOpenAddPlace","map","item","key","click","delete","EntryPoint","Inputs","inputs","onSubmit","Register","useState","setEmail","password","setPassword","history","useHistory","preventDefault","push","htmlFor","placeholder","required","minLength","maxLength","value","onChange","autoComplete","Login","Footer","PopupWithForm","isOpen","buttonText","onClose","buttonRef","useRef","popupStyle","currentTarget","ref","EditProfilePopup","setName","setAbout","useEffect","EditAvatarPopup","avatarInput","current","AddPlacePopup","newName","setNewName","newSrc","setNewSrc","ConfirmDeletePopup","InfoTooltip","iconImageStyle","PopupWithImage","subtitle","getResponseData","res","ok","json","Promise","reject","Error","status","api","url","token","this","_url","_token","fetch","method","headers","authorization","then","newAbout","body","JSON","stringify","escape","newAvatar","cardName","cardLink","cardID","jwt","Authorization","App","init","setInit","setloggedIn","isEditProfileOpen","setEditProfileOpen","isAddPlaceOpen","setAddPlaceOpen","isEditAvatarOpen","setEditAvatarOpen","cardIdPrepareForRemove","setCardIdPrepareForRemove","selectedCard","setSelectedCard","infoTooltip","setInfoTooltip","setCards","setCurrentUser","tokenValidate","localStorage","getItem","console","log","authApi","validateToken","data","all","getUserInfo","getCards","userInfo","initCards","catch","err","finally","handleKeyPress","event","closeAllPopups","document","addEventListener","removeEventListener","mapNewCards","idCard","cardJSON","card","infoTooltipSuccesSignUp","infoTooltipError","errorMessage","Provider","removeItem","path","isAlreadyLike","removeLike","putLike","cardId","cleanUp","signUp","message","showOk","showError","signIn","setItem","oldButtonCaption","textContent","updateUserInfo","updateUserAvatar","addNewCard","newCard","deleteCard","filter","ReactDOM","render","StrictMode","basename","hashType","getElementById"],"mappings":"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","file":"static/js/main.01acb347.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext();\r\n","export default __webpack_public_path__ + \"static/media/mesto-logo.c2821b38.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport logo from '../images/mesto-logo.svg';\r\nimport CurrentUserContext from '../contexts/currentUser';\r\n\r\nfunction Header({ loggedIn, onSignOut }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <header className=\"header content-section\">\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Место-Логотип\" className=\"header__logo\" />\r\n      </Link>\r\n      {loggedIn ? (\r\n        <>\r\n          <p className=\"header__login-email\">{currentUser.email}</p>\r\n          <button\r\n            className=\"header__logout-button\"\r\n            type=\"button\"\r\n            aria-label=\"Выход из учетной записи\"\r\n            onClick={onSignOut}\r\n          >\r\n            Выйти\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p className=\"header__login-email\" />\r\n          <Link className=\"header__link-to-sing-up\" to=\"/sign-up\">\r\n            Регистрация\r\n          </Link>\r\n        </>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  loggedIn: PropTypes.bool,\r\n  onSignOut: PropTypes.func.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  loggedIn: false,\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({ component: Component, loggedIn, ...props }) {\n  return <Route>{() => (loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />)}</Route>;\n}\n\nProtectedRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  path: PropTypes.string.isRequired,\n  exact: PropTypes.bool,\n  loggedIn: PropTypes.bool,\n};\n\nProtectedRoute.defaultProps = {\n  loggedIn: false,\n  exact: false,\n};\n\nexport default ProtectedRoute;\n","// eslint-disable-next-line import/prefer-default-export\r\nexport const onErrorMockImage =\r\n  'https://images.unsplash.com/photo-1458419948946-19fb2cc296af?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { onErrorMockImage } from '../utils/constants';\r\nimport CurrentUserContext from '../contexts/currentUser';\r\n\r\nfunction Card({ id, name, link, likes, owner, onClick, onLike, onDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const isLiked = !!(\r\n    likes.length !== 0 &&\r\n    likes.find((like) => {\r\n      return like._id === currentUser.id;\r\n    })\r\n  );\r\n\r\n  const removeIconStyle =\r\n    currentUser.id === owner._id\r\n      ? 'element__remove-icon  element__remove-icon_show'\r\n      : 'element__remove-icon';\r\n  const likeIconStyle = isLiked\r\n    ? 'element__like-icon element__like-icon_checked'\r\n    : 'element__like-icon';\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Удаление карточки\"\r\n        className={removeIconStyle}\r\n        onClick={() => {\r\n          onDelete(id);\r\n        }}\r\n      />\r\n      <img\r\n        role=\"presentation\"\r\n        src={link}\r\n        alt=\"#\"\r\n        className=\"element__image\"\r\n        onClick={() => {\r\n          onClick.call(this, link, name);\r\n        }}\r\n        onError={(evt) => {\r\n          // eslint-disable-next-line no-param-reassign\r\n          evt.target.src = onErrorMockImage;\r\n        }}\r\n      />\r\n      <div className=\"element__footer\">\r\n        <h2 className=\"element__title\" title={name}>\r\n          {name}\r\n        </h2>\r\n        <div className=\"element__like-block\">\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"Лайк карточке\"\r\n            className={likeIconStyle}\r\n            onClick={() => {\r\n              onLike(isLiked, id);\r\n            }}\r\n          />\r\n          <p className=\"element__like-couter\">{likes ? likes.length : 0}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string,\r\n  link: PropTypes.string,\r\n  likes: PropTypes.arrayOf(PropTypes.instanceOf(Object)),\r\n  owner: PropTypes.instanceOf(Object).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onLike: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nCard.defaultProps = {\r\n  name: 'Неизвестное место',\r\n  link: onErrorMockImage,\r\n  likes: [],\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card';\r\n\r\nimport CurrentUserContext from '../contexts/currentUser';\r\n\r\nfunction Main({ handlersProfile, cards, handlersCard }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile content-section\">\r\n        <div className=\"profile__avatar-wrapper\">\r\n          <img\r\n            src={currentUser.avatar}\r\n            role=\"presentation\"\r\n            alt=\"Аватар\"\r\n            className=\"profile__avatar\"\r\n            onClick={() => handlersProfile.setOpenEditAvatar(true)}\r\n          />\r\n        </div>\r\n        <div className=\"profile__profile-info\">\r\n          <h2 className=\"profile__name\">{currentUser.name}</h2>\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"1\"\r\n            className=\"profile__edit-button\"\r\n            onClick={() => handlersProfile.setOpenEditProfile(true)}\r\n          />\r\n          <p className=\"profile__job\">{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"1\"\r\n          className=\"profile__add-button\"\r\n          onClick={() => handlersProfile.setOpenAddPlace(true)}\r\n        />\r\n      </section>\r\n      <section className=\"elements content-section\">\r\n        <ul className=\"elements__img-grid\">\r\n          {cards.map(({ _id, ...item }) => (\r\n            <Card\r\n              key={_id}\r\n              id={_id}\r\n              name={item.name}\r\n              link={item.link}\r\n              likes={item.likes}\r\n              owner={item.owner}\r\n              onClick={handlersCard.click}\r\n              onLike={handlersCard.like}\r\n              onDelete={handlersCard.delete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  handlersProfile: PropTypes.objectOf(PropTypes.func).isRequired,\r\n  cards: PropTypes.arrayOf(PropTypes.instanceOf(Object)),\r\n  handlersCard: PropTypes.objectOf(PropTypes.func).isRequired,\r\n};\r\n\r\nMain.defaultProps = {\r\n  cards: null,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EntryPoint({ inputs: Inputs, onSubmit }) {\r\n  return (\r\n    <main className=\"main main_type_login\">\r\n      <section>\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          {Inputs}\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nEntryPoint.propTypes = {\r\n  inputs: PropTypes.element.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EntryPoint;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport EntryPoint from './EntryPoint';\r\n\r\nfunction Register({ onSubmit }) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const history = useHistory();\r\n\r\n  const handleRegisterUserSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const cleanUp = () => {\r\n      setEmail('');\r\n      setPassword('');\r\n\r\n      history.push('/sign-in');\r\n    };\r\n\r\n    onSubmit(email, password, cleanUp);\r\n  };\r\n\r\n  return (\r\n    <EntryPoint\r\n      onSubmit={handleRegisterUserSubmit}\r\n      inputs={\r\n        <>\r\n          <h2 className=\"form__title form__title_type_login\">Регистрация</h2>\r\n          <label className=\"form__label form__label_type_login\" htmlFor=\"register-email-input\">\r\n            <input\r\n              id=\"register-email-input\"\r\n              className=\"form__input-text form__input-text_type_login\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              value={email}\r\n              onChange={(evt) => {\r\n                setEmail(evt.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <label className=\"form__label form__label_type_login\" htmlFor=\"register-password-input\">\r\n            <input\r\n              id=\"register-password-input\"\r\n              className=\"form__input-text form__input-text_type_login\"\r\n              type=\"password\"\r\n              placeholder=\"Пароль\"\r\n              required\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              autoComplete=\"false\"\r\n              value={password}\r\n              onChange={(evt) => {\r\n                setPassword(evt.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <button className=\"form__submit-button login__submit_type_login\" type=\"submit\">\r\n            Зарегистрироваться\r\n          </button>\r\n          <Link className=\"form__sign-in-link\" to=\"/sign-in\">\r\n            Уже зарегистрированы? Войти\r\n          </Link>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nRegister.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EntryPoint from './EntryPoint';\r\n\r\nfunction Login({ onSubmit }) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  const handleRegisterUserSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const cleanUp = () => {\r\n      setEmail('');\r\n      setPassword('');\r\n    };\r\n\r\n    onSubmit(email, password, cleanUp);\r\n  };\r\n\r\n  return (\r\n    <EntryPoint\r\n      onSubmit={handleRegisterUserSubmit}\r\n      inputs={\r\n        <>\r\n          <h2 className=\"form__title form__title_type_login\">Вход</h2>\r\n          <label className=\"form__label form__label_type_login\" htmlFor=\"login-email-input\">\r\n            <input\r\n              id=\"login-email-input\"\r\n              className=\"form__input-text form__input-text_type_login\"\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              required\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              value={email}\r\n              onChange={(evt) => {\r\n                setEmail(evt.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <label className=\"form__label form__label_type_login\" htmlFor=\"login-password-input\">\r\n            <input\r\n              id=\"login-password-input\"\r\n              className=\"form__input-text form__input-text_type_login\"\r\n              type=\"password\"\r\n              autoComplete=\"false\"\r\n              placeholder=\"Пароль\"\r\n              required\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              value={password}\r\n              onChange={(evt) => {\r\n                setPassword(evt.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <button className=\"form__submit-button login__submit_type_login\" type=\"submit\">\r\n            Войти\r\n          </button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer content-section\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PopupWithForm({ isOpen, title, name, inputs, buttonText, onClose, onSubmit }) {\r\n  const buttonRef = useRef(null);\r\n\r\n  let popupStyle = `popup popup-${name}`;\r\n  if (isOpen) {\r\n    popupStyle += ' popup_opened';\r\n  }\r\n\r\n  const handleSubmitForm = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    onSubmit(buttonRef);\r\n  };\r\n\r\n  const handleClosePopupByClickOutside = (evt) => {\r\n    if (evt.currentTarget === evt.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={popupStyle} role=\"presentation\" onClick={handleClosePopupByClickOutside}>\r\n      <div className=\"popup__container popup__container_type_form\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Закрыть всплывающее окно\"\r\n          className=\"popup__close-icon\"\r\n          onClick={onClose}\r\n        />\r\n        <form className=\"form\" autoComplete=\"off\" onSubmit={handleSubmitForm}>\r\n          <p className=\"form__title\">{title}</p>\r\n          {inputs}\r\n          <button type=\"submit\" className=\"form__submit-button\" ref={buttonRef}>\r\n            {buttonText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPopupWithForm.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  title: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  inputs: PropTypes.element,\r\n  buttonText: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nPopupWithForm.defaultProps = {\r\n  isOpen: false,\r\n  inputs: null,\r\n  buttonText: '',\r\n};\r\n\r\nexport default PopupWithForm;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/currentUser';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onSubmit }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [about, setAbout] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setAbout(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleEditProfileFormSubmit(buttonRef) {\r\n    onSubmit(name, about, buttonRef);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit\"\r\n      buttonText=\"Сохранить\"\r\n      onClose={onClose}\r\n      onSubmit={handleEditProfileFormSubmit}\r\n      inputs={\r\n        <>\r\n          <label htmlFor=\"edit-form_name\" className=\"form__label\">\r\n            <input\r\n              id=\"edit-form_name\"\r\n              name=\"edit-form_name\"\r\n              type=\"text\"\r\n              required\r\n              minLength={2}\r\n              maxLength={40}\r\n              className=\"form__input-text edit-popup__input-text_type_name\"\r\n              value={name}\r\n              onChange={(evt) => setName(evt.target.value)}\r\n            />\r\n            <span id=\"edit-form_name-error\" className=\"form__input-error\" />\r\n          </label>\r\n          <label htmlFor=\"edit-form_about\" className=\"form__form-label\">\r\n            <input\r\n              id=\"edit-form_about\"\r\n              name=\"edit-form_about\"\r\n              type=\"text\"\r\n              required\r\n              minLength={2}\r\n              maxLength={200}\r\n              className=\"form__input-text edit-popup__input-text_type_job\"\r\n              value={about}\r\n              onChange={(evt) => setAbout(evt.target.value)}\r\n            />\r\n            <span id=\"edit-form_about-error\" className=\"form__input-error\" />\r\n          </label>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nEditProfilePopup.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nEditProfilePopup.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onSubmit }) {\r\n  const avatarInput = useRef(null);\r\n\r\n  const handleEditAvatarFormSubmit = (buttonRef) => {\r\n    const cleanUp = () => {\r\n      avatarInput.current.value = '';\r\n    };\r\n    onSubmit(avatarInput.current.value, buttonRef, cleanUp);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      title=\"Обновить аватар\"\r\n      name=\"avatar\"\r\n      buttonText=\"Сохранить\"\r\n      onClose={onClose}\r\n      onSubmit={handleEditAvatarFormSubmit}\r\n      inputs={\r\n        <>\r\n          <label htmlFor=\"avatar-form_src\" className=\"form__label\">\r\n            <input\r\n              id=\"avatar-form_src\"\r\n              name=\"avatar-form_src\"\r\n              type=\"url\"\r\n              required\r\n              placeholder=\"Ссылка на аватар\"\r\n              className=\"form__input-text avatar-form__input-text_type_src\"\r\n              ref={avatarInput}\r\n            />\r\n            <span id=\"avatar-form_src-error\" className=\"form__input-error\" />\r\n          </label>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nEditAvatarPopup.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nEditAvatarPopup.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onSubmit }) {\r\n  const [newName, setNewName] = React.useState('');\r\n  const [newSrc, setNewSrc] = React.useState('');\r\n\r\n  const handleAddPlaceFormSubmit = (buttonRef) => {\r\n    const cleanUp = () => {\r\n      setNewName('');\r\n      setNewSrc('');\r\n    };\r\n    onSubmit(newName, newSrc, buttonRef, cleanUp);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      title=\"Новое место\"\r\n      name=\"add\"\r\n      buttonText=\"Создать\"\r\n      onClose={onClose}\r\n      onSubmit={handleAddPlaceFormSubmit}\r\n      inputs={\r\n        <>\r\n          <label htmlFor=\"add-form_name\" className=\"form__label\">\r\n            <input\r\n              id=\"add-form_name\"\r\n              name=\"add-form_name\"\r\n              type=\"text\"\r\n              required\r\n              minLength={1}\r\n              maxLength={30}\r\n              placeholder=\"Название\"\r\n              className=\"form__input-text add-form__input-text_type_name\"\r\n              value={newName}\r\n              onChange={(evt) => setNewName(evt.target.value)}\r\n            />\r\n            <span id=\"add-form_name-error\" className=\"form__input-error\" />\r\n          </label>\r\n          <label htmlFor=\"add-form_src\" className=\"form__form-label\">\r\n            <input\r\n              id=\"add-form_src\"\r\n              name=\"add-form_src\"\r\n              type=\"url\"\r\n              required\r\n              placeholder=\"Ссылка на картинку\"\r\n              className=\"form__input-text add-form__input-text_type_src\"\r\n              value={newSrc}\r\n              onChange={(evt) => setNewSrc(evt.target.value)}\r\n            />\r\n            <span id=\"add-form_src-error\" className=\"form__input-error\" />\r\n          </label>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nAddPlacePopup.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nAddPlacePopup.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmDeletePopup({ isOpen, onClose, onSubmit }) {\r\n  const handleConfirmDeleteFormSubmit = (buttonRef) => {\r\n    onSubmit(buttonRef);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      title=\"Вы уверены?\"\r\n      name=\"delete-card\"\r\n      buttonText=\"Да\"\r\n      onClose={onClose}\r\n      onSubmit={handleConfirmDeleteFormSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nConfirmDeletePopup.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nConfirmDeletePopup.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default ConfirmDeletePopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction InfoTooltip({ isOpen, title, type, onClose }) {\r\n  let popupStyle = `popup`;\r\n  if (isOpen) {\r\n    popupStyle += ' popup_opened';\r\n  }\r\n\r\n  let iconImageStyle;\r\n  switch (type) {\r\n    case 'ok':\r\n      iconImageStyle = 'popup__info-icon popup__info-icon_type_ok';\r\n      break;\r\n    case 'error':\r\n      iconImageStyle = 'popup__info-icon popup__info-icon_type_error';\r\n      break;\r\n    default:\r\n      iconImageStyle = 'popup__info-icon';\r\n      break;\r\n  }\r\n\r\n  const handleClosePopupByClickOutside = (evt) => {\r\n    if (evt.currentTarget === evt.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={popupStyle} role=\"presentation\" onClick={handleClosePopupByClickOutside}>\r\n      <div className=\"popup__container popup__container_type_inform\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Закрыть информационное всплывающее окно\"\r\n          className=\"popup__close-icon\"\r\n          onClick={onClose}\r\n        />\r\n        <div className={iconImageStyle} />\r\n        <p className=\"popup__informSubtitle\">{title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nInfoTooltip.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  type: PropTypes.oneOf(['ok', 'error']),\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nInfoTooltip.defaultProps = {\r\n  isOpen: false,\r\n  title: '',\r\n  type: '',\r\n};\r\n\r\nexport default InfoTooltip;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { onErrorMockImage } from '../utils/constants';\r\n\r\nfunction PopupWithImage({ isOpen, src, subtitle, onClose }) {\r\n  let popupStyle = `popup`;\r\n  if (isOpen) {\r\n    popupStyle += ' popup_opened';\r\n  }\r\n\r\n  const handleClosePopupByClickOutside = (evt) => {\r\n    if (evt.currentTarget === evt.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={popupStyle} role=\"presentation\" onClick={handleClosePopupByClickOutside}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Закрыть всплывающее окно с картинкой\"\r\n          className=\"popup__close-icon\"\r\n          onClick={onClose}\r\n        />\r\n        <img src={src} alt=\"#\" className=\"popup__image\" />\r\n        <p className=\"popup__img-subtitle\">{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPopupWithImage.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n};\r\n\r\nPopupWithImage.defaultProps = {\r\n  isOpen: false,\r\n  src: onErrorMockImage,\r\n  subtitle: 'Неизвестное место',\r\n};\r\n\r\nexport default PopupWithImage;\r\n","export default function getResponseData(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n}\r\n","import escape from 'escape-html';\r\nimport getResponseData from './getResponseData';\r\n\r\nclass Api {\r\n  constructor(url, token) {\r\n    this._url = url;\r\n    this._token = token;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  updateUserInfo(newName, newAbout) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: escape(newName),\r\n        about: escape(newAbout),\r\n      }),\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  updateUserAvatar(newAvatar) {\r\n    return fetch(`${this._url}users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: escape(newAvatar),\r\n      }),\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  addNewCard(cardName, cardLink) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: escape(cardName),\r\n        link: escape(cardLink),\r\n      }),\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._url}cards/${cardID}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  putLike(cardID) {\r\n    return fetch(`${this._url}cards/likes/${cardID}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n\r\n  removeLike(cardID) {\r\n    return fetch(`${this._url}cards/likes/${cardID}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => getResponseData(res));\r\n  }\r\n}\r\n\r\nconst api = new Api(\r\n  'https://mesto.nomoreparties.co/v1/cohort-15/',\r\n  '00e3d586-abb9-483a-af25-8c5b37844ed8',\r\n);\r\n\r\nexport default api;\r\n","import escape from 'escape-html';\r\nimport getResponseData from './getResponseData';\r\n\r\nclass AuthAPI {\r\n  constructor(url) {\r\n    this._url = url;\r\n  }\r\n\r\n  signUp(email, password) {\r\n    return fetch(`${this._url}signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: escape(email),\r\n        password: escape(password),\r\n      }),\r\n    }).then((res) => {\r\n      return getResponseData(res);\r\n    });\r\n  }\r\n\r\n  signIn(email, password) {\r\n    return fetch(`${this._url}signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: escape(email),\r\n        password: escape(password),\r\n      }),\r\n    }).then((res) => {\r\n      return getResponseData(res);\r\n    });\r\n  }\r\n\r\n  validateToken(jwt) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n    }).then((res) => {\r\n      return getResponseData(res);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthAPI('https://auth.nomoreparties.co/');\r\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport CurrentUserContext from '../contexts/currentUser';\n\nimport Header from './Header';\nimport ProtectedRoute from './ProtectedRoute';\nimport Main from './Main';\nimport Register from './Register';\nimport Login from './Login';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport InfoTooltip from './InfoTooltip';\nimport PopupWithImage from './PopupWithImage';\n\nimport '../index.css';\nimport api from '../utils/api';\nimport authApi from '../utils/authApi';\n\nfunction App() {\n  const history = useHistory();\n\n  // eslint-disable-next-line no-unused-vars\n  const [init, setInit] = useState(false);\n  const [loggedIn, setloggedIn] = useState(false);\n  const [isEditProfileOpen, setEditProfileOpen] = useState(false);\n  const [isAddPlaceOpen, setAddPlaceOpen] = useState(false);\n  const [isEditAvatarOpen, setEditAvatarOpen] = useState(false);\n  const [cardIdPrepareForRemove, setCardIdPrepareForRemove] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [infoTooltip, setInfoTooltip] = useState(null);\n\n  const [cards, setCards] = useState([]);\n\n  const [currentUser, setCurrentUser] = useState({\n    id: '',\n    name: '',\n    about: '',\n    avatar: '',\n    email: '',\n  });\n\n  const tokenValidate = () => {\n    const jwt = localStorage.getItem('jwt');\n    console.log(loggedIn);\n    if (jwt) {\n      return authApi.validateToken(jwt).then((res) => {\n        setCurrentUser({\n          id: res.data._id,\n          email: res.data.email,\n        });\n        setloggedIn(true);\n      });\n    }\n    return Promise.reject();\n  };\n\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([api.getUserInfo(), api.getCards()])\n        .then((data) => {\n          const [userInfo, initCards] = data;\n          setCards(initCards);\n          setCurrentUser({\n            ...currentUser,\n            id: userInfo._id,\n            name: userInfo.name,\n            about: userInfo.about,\n            avatar: userInfo.avatar,\n          });\n        })\n        .catch((err) => {\n          console.log('Error on - Render Main page');\n          console.log(`Error message - ${err}`);\n        });\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    tokenValidate()\n      .then(() => {\n        setloggedIn(true);\n      })\n      .finally(() => {\n        setInit(true);\n      });\n  }, []);\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Escape') {\n      // eslint-disable-next-line no-use-before-define\n      closeAllPopups();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n  }, [isEditProfileOpen, isAddPlaceOpen, isEditAvatarOpen, selectedCard]);\n\n  const closeAllPopups = () => {\n    setEditProfileOpen(false);\n    setAddPlaceOpen(false);\n    setEditAvatarOpen(false);\n\n    setCardIdPrepareForRemove(null);\n    setInfoTooltip(null);\n    setSelectedCard(null);\n\n    document.removeEventListener('keydown', handleKeyPress);\n  };\n\n  // #region Cards and handlers\n\n  const handeCardClick = (link, name) => {\n    setSelectedCard({\n      src: link,\n      subtitle: name,\n    });\n  };\n\n  const mapNewCards = (idCard, cardJSON) => {\n    setCards(\n      cards.map((card) => {\n        if (card._id === idCard) {\n          return { ...card, likes: cardJSON.likes };\n        }\n        return card;\n      }),\n    );\n  };\n\n  const handleCardLike = (isAlreadyLike, idCard) => {\n    if (!isAlreadyLike) {\n      api\n        .putLike(idCard)\n        .then((cardJSON) => {\n          mapNewCards(idCard, cardJSON);\n        })\n        .catch((err) => {\n          console.log('Error on - putLike');\n          console.log(`Error message - ${err}`);\n        });\n    } else {\n      api\n        .removeLike(idCard)\n        .then((cardJSON) => {\n          mapNewCards(idCard, cardJSON);\n        })\n        .catch((err) => {\n          console.log('Error on - removeLike');\n          console.log(`Error message - ${err}`);\n        });\n    }\n  };\n\n  const handleCardDelete = (cardId) => {\n    setCardIdPrepareForRemove(cardId);\n  };\n  // #endregion\n\n  // #region Forms Submit Handlers\n  const handleUpdateUserProfile = (name, about, ref) => {\n    const oldButtonCaption = ref.current.textContent;\n    const buttonRef = ref;\n    buttonRef.current.textContent = 'Сохраняю...';\n    api\n      .updateUserInfo(name, about)\n      .then((userInfo) => {\n        setCurrentUser({\n          ...currentUser,\n          name: userInfo.name,\n          about: userInfo.about,\n        });\n        buttonRef.current.textContent = oldButtonCaption;\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('Error on - handleUpdateUserProfile');\n        console.log(`Error message - ${err}`);\n      });\n  };\n\n  const handleUpdateUserAvatar = (newAvatar, ref, cleanUp) => {\n    const oldButtonCaption = ref.current.textContent;\n    const buttonRef = ref;\n    buttonRef.current.textContent = 'Сохраняю...';\n    api\n      .updateUserAvatar(newAvatar)\n      .then((data) => {\n        setCurrentUser({ ...currentUser, avatar: data.avatar });\n        buttonRef.current.textContent = oldButtonCaption;\n        cleanUp();\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('Error on - handleUpdateUserAvatar');\n        console.log(`Error message - ${err}`);\n      });\n  };\n\n  const handleAddPlaceSubmit = (newName, newSrc, ref, cleanUp) => {\n    const oldButtonCaption = ref.current.textContent;\n    const buttonRef = ref;\n    buttonRef.current.textContent = 'Создаю...';\n    api\n      .addNewCard(newName, newSrc)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        buttonRef.current.textContent = oldButtonCaption;\n        cleanUp();\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('Error on - handleAddPlaceSubmit');\n        console.log(`Error message - ${err}`);\n      });\n  };\n\n  const handleRemovePlaceSubmit = (ref) => {\n    const oldButtonCaption = ref.current.textContent;\n    const buttonRef = ref;\n    buttonRef.current.textContent = 'Удаляю...';\n    api\n      .deleteCard(cardIdPrepareForRemove)\n      .then(() => {\n        setCards(cards.filter((card) => card._id !== cardIdPrepareForRemove));\n        buttonRef.current.textContent = oldButtonCaption;\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('Error on - handleRemovePlaceSubmit');\n        console.log(`Error message - ${err}`);\n      });\n  };\n\n  // #endregion\n\n  // #region infoTooltip\n  const infoTooltipSuccesSignUp = () => {\n    setInfoTooltip({ title: 'Вы успешно зарегистрировались!', type: 'ok' });\n  };\n\n  const infoTooltipError = (errorMessage = 'Что-то пошло не так! Попробуйте ещё раз.') => {\n    setInfoTooltip({ title: errorMessage, type: 'error' });\n  };\n  // #endregion\n\n  // #region  Auth Handlers\n  const onSignUp = (email, password, cleanUp) => {\n    authApi\n      .signUp(email, password)\n      .then(() => {\n        infoTooltipSuccesSignUp();\n        cleanUp();\n      })\n      .catch((err) => {\n        if (err.message === 'Ошибка: 400') {\n          infoTooltipError('Такой email уже существует');\n        } else {\n          infoTooltipError();\n        }\n      });\n  };\n\n  const onLogin = (email, password, cleanUp) => {\n    authApi\n      .signIn(email, password)\n      .then((res) => {\n        localStorage.setItem('jwt', res.token);\n        cleanUp();\n        return tokenValidate();\n      })\n      .then(() => {\n        history.push('./');\n      })\n      .catch((err) => {\n        if (err.message === 'Ошибка: 401') {\n          infoTooltipError('Введен неправильный email или пароль!');\n        } else {\n          infoTooltipError();\n        }\n      });\n  };\n\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    setloggedIn(false);\n    history.push('/sign-in');\n  };\n\n  // #endregion\n  return (\n    <div className=\"content\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header loggedIn={loggedIn} onSignOut={onSignOut} />\n        {init && (\n          <Switch>\n            <ProtectedRoute\n              loggedIn={loggedIn}\n              exact\n              path=\"/\"\n              component={Main}\n              cards={cards}\n              handlersProfile={{\n                setOpenEditProfile: setEditProfileOpen,\n                setOpenEditAvatar: setEditAvatarOpen,\n                setOpenAddPlace: setAddPlaceOpen,\n              }}\n              handlersCard={{\n                click: handeCardClick,\n                like: handleCardLike,\n                delete: handleCardDelete,\n              }}\n            />\n            <Route path=\"/sign-up\">\n              <Register\n                onSubmit={onSignUp}\n                showOk={infoTooltipSuccesSignUp}\n                showError={infoTooltipError}\n              />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login onSubmit={onLogin} showError={infoTooltipError} />\n            </Route>\n          </Switch>\n        )}\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfileOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleUpdateUserProfile}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleUpdateUserAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlaceOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleAddPlaceSubmit}\n        />\n        <ConfirmDeletePopup\n          isOpen={!!cardIdPrepareForRemove}\n          onClose={closeAllPopups}\n          onSubmit={handleRemovePlaceSubmit}\n        />\n        <PopupWithImage\n          isOpen={!!selectedCard}\n          src={selectedCard && selectedCard.src}\n          subtitle={selectedCard && selectedCard.subtitle}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          isOpen={!!infoTooltip}\n          title={infoTooltip && infoTooltip.title}\n          type={infoTooltip && infoTooltip.type}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\" hashType=\"noslash\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}